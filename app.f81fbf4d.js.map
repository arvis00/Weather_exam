{"version":3,"sources":["http/http.js","http/endpoints.js","view/elements.js","localStorage.js","view/views.js","view/effects.js","app.js"],"names":["getWeather","url","fetch","then","r","json","weatherId","units","gifId","endpoint","getByCityName","city","endpointCoordOpenWeather","getByCoord","lat","lon","gifEndpoint","getByWeatherCondition","condition","gifStaticEndpoint","forecastEndpoint","ELEMENTS","output","document","querySelector","form","submit","loader","containerHeight","cardsHeight","refresh","saveToLocalStorage","userID","cards","arrJson","JSON","stringify","localStorage","setItem","getCardsFromLocalStorage","getItem","parse","renderCards","innerHTML","forEach","card","main","weather","name","weatherCond","gifUrl","forecastUrl","template","Date","id","Math","round","temp","feels_like","description","humidity","retrieved","insertAdjacentHTML","singleCard2","singleCont","overlay","overlayText","deleteBtn","style","width","padding","margin","position","top","left","bottom","background","opacity","transition","borderRadius","onmouseenter","filter","display","onmouseleave","textContent","response","result","gifResult","gifUrlResult","urlString","singleCard","data","images","fixed_height_small","backgroundImage","backgroundSize","backgroundRepeat","catch","error","console","log","addEventListener","item","window","deletedBtn","forecastResult","list","splice","dayOfWeek","dayNumber","timeStampId","undefined","listChunks","dt","a","getDay","reduce","value","index","length","push","concat","forecastTemp","dayIcon","iconCode","threeHours","dt_txt","hour","getHours","icon","dayDescr","desc","templateForecast","modal","getElementById","span","getElementsByClassName","onclick","event","target","nav","portfolio","scrollY","height","myRefreshFunction","getLocation","objBtn","deleted","setDeletedTrue","setDeletedFalse","changeUser","signOut","proceed","promptResult","prompt","alert","myRefresh","called","showMoreBtn","show","offsetHeight","submitMe","e","preventDefault","path","elements","cityName","check","find","toLowerCase","trim","urlWeather","fetchCity","reset","submitBtn","secondsBetweenActions","secondsRemaining","setInterval","updateStatus","enabled","timer","latitude","longitude","cod","Error","message","date","getTime","toLocaleString","navigator","geolocation","getCurrentPosition","SendLocation","coords","fetchCoord","coordResult","body","createElement","locCond","locTemp","locDesc","locCity","rain","clear","clouds","src","className","appendChild"],"mappings":"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","file":"app.f81fbf4d.js","sourceRoot":"..","sourcesContent":["const getWeather = (url) => {\n    return fetch(url)\n      .then(r => r.json())\n  };\n  \n  \n  export { getWeather };\n  \n  ","const weatherId = \"790dff15e5ecdde73da819196a127634\";\nconst units = \"metric\";\nconst gifId = \"6LkxF8Jv5CrI70LWPSHapYnfCiU40Hfh\";\n\nconst endpoint = {\n  getByCityName: function(city) {\n    return `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${units}&appid=${weatherId}`;\n  }\n};\n\nconst endpointCoordOpenWeather = {\n  getByCoord: function(lat, lon) {\n    return `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=${units}&appid=${weatherId}`;\n  }\n};\n\nconst gifEndpoint = {\n  getByWeatherCondition: function(condition) {\n    return `http://api.giphy.com/v1/gifs/random?api_key=${gifId}&tag=${condition}`;\n  }\n};\n\nconst gifStaticEndpoint = {\n  getByWeatherCondition: function(condition) {\n    return `http://api.giphy.com/v1/stickers/random?api_key=${gifId}&tag=${condition}`;\n  }\n};\n\nconst forecastEndpoint = {\n  getByCityName: function(city) {\n    return `http://api.openweathermap.org/data/2.5/forecast?q=${city}&units=${units}&appid=${weatherId}`;\n  }\n};\n\nexport {\n  endpoint,\n  gifEndpoint,\n  gifStaticEndpoint,\n  forecastEndpoint,\n  endpointCoordOpenWeather\n};\n","const ELEMENTS = {\n  output: document.querySelector(\".cards\"),\n  form: document.querySelector(\".controller\"),\n  submit: document.querySelector('[type=\"submit\"]'),\n  loader: document.querySelector(\".loading\"),\n  containerHeight: document.querySelector(\".cards-container\"),\n  cardsHeight: document.querySelector(\".cards\"),\n  refresh: document.querySelector(\".refresh\")\n};\n\nexport { ELEMENTS };\n","const saveToLocalStorage = (userID, cards) => {\n  const arrJson = JSON.stringify(cards);\n  localStorage.setItem(userID, arrJson);\n};\n\nconst getCardsFromLocalStorage = userID => localStorage.getItem(userID) ? JSON.parse(localStorage.getItem(userID)) : [];\n\n\nexport { saveToLocalStorage, getCardsFromLocalStorage };\n","import { ELEMENTS } from \"./elements\";\nimport { saveToLocalStorage } from \"/localStorage\";\nimport { gifEndpoint, forecastEndpoint } from \"/http/endpoints\";\nimport { setDeletedTrue } from \"/app\";\n\nconst { output } = ELEMENTS;\n\nconst renderCards = (userID, cards) => {\n  output.innerHTML = \"\";\n  cards.forEach(card => {\n    const { main, weather, name } = card;\n\n    let weatherCond = weather[0].main;\n    if (weatherCond === \"Clear\") {\n      weatherCond = \"Sky\";\n    }\n    const gifUrl = gifEndpoint.getByWeatherCondition(weatherCond);\n    const forecastUrl = forecastEndpoint.getByCityName(name);\n\n    const date = new Date();\n    const template = `\n    <div class='singleCont${card.id}'>\n        <div class='singleCard${card.id}' id='singleCard'>\n            <h2><span>${card.name}</span></h2>\n            <p><span>Temperature: ${Math.round(main.temp)} &#8451;</span></p>\n            <p><span>Feels like: ${Math.round(\n              main.feels_like\n            )} &#8451;</span></p>\n            <p><span>Description: ${weather[0].description}</span></p>\n            <p><span>Humidity: ${main.humidity}%</span></p>\n            <p><span>${card.retrieved}</span></p>\n        </div>\n        <button class=delete${card.id}>\n            <span class=\"line\"></span>\n            <span class=\"line\"></span>\n        </button>\n        <div class=\"overlay${card.id}\">\n        <h1>See the forecast</h1>\n        </div>\n    </div>\n    `;\n\n    output.insertAdjacentHTML(\"afterbegin\", template);\n    const singleCard2 = document.querySelector(`[class^='singleCard']`);\n    const singleCont = document.querySelector(`[class^='singleCont']`);\n    const overlay = document.querySelector(`[class^='overlay']`);\n    const overlayText = document.querySelector(`[class^='overlay'] h1`);\n    const deleteBtn = document.querySelector(`.delete${card.id}`);\n    overlay.style.width = \"249px\";\n    overlay.style.padding = \"18px\";\n    overlay.style.margin = \"6px\";\n    overlay.style.position = \"absolute\";\n    overlay.style.top = \"0\";\n    overlay.style.left = \"0\";\n    overlay.style.bottom = \"0\";\n    overlay.style.background = \"rgba(12, 98, 226, 0.678)\";\n    overlay.style.opacity = \"0\";\n    overlay.style.transition = \".3s all\";\n    overlay.style.borderRadius = \"12px\";\n    singleCont.onmouseenter = function() {\n      singleCard2.style.filter = \"blur(2px)\";\n      overlay.style.opacity = \"1\";\n      deleteBtn.style.display = \"block\";\n    };\n\n    singleCont.onmouseleave = function() {\n      singleCard2.style.filter = \"blur(0px)\";\n      overlay.style.opacity = \"0\";\n      deleteBtn.style.display = \"none\";\n    };\n\n    deleteBtn.onmouseenter = function() {\n      overlay.style.background = \"rgba(245, 4, 4, 0.678)\";\n      overlayText.textContent = \"Remove city\";\n    };\n\n    deleteBtn.onmouseleave = function() {\n      overlay.style.background = \"rgba(12, 98, 226, 0.678)\";\n      overlayText.textContent = \"See the forecast\";\n    };\n\n    fetchGif(gifUrl);\n    // saveToLocalStorage(userID, cards);\n\n    deleteBtn.addEventListener(\"click\", function() {\n      deleteCard();\n    });\n\n    function deleteCard() {\n      cards = cards.filter(item => {\n        return item.id !== card.id;\n      });\n\n      setDeletedTrue();\n      window.deletedBtn = true;\n      saveToLocalStorage(userID, cards);\n      renderCards(userID, cards);\n    }\n\n    function fetchGif(url) {\n      fetch(url)\n        .then(function(response) {\n          return response.json();\n        })\n        .then(function(result) {\n          gifResult(result);\n        })\n        .catch(error => {\n          console.log(\"klaida\", error);\n        });\n    }\n\n    function gifResult(finalResult) {\n      const gifUrlResult = finalResult.data.images.fixed_height_small.url;\n      const urlString = `url('${gifUrlResult}')`;\n        const singleCard = document.querySelector(`.singleCard${card.id}`);\n        \n      singleCard.style.backgroundImage = urlString;\n      singleCard.style.backgroundSize = \"cover\";\n      singleCard.style.backgroundRepeat = \"no-repeat\";\n    }\n\n    const pressOverlay = document.querySelector(`.overlay${card.id}`);\n\n    pressOverlay.addEventListener(\"click\", function() {\n      fetchForecast(forecastUrl);\n    });\n\n    function fetchForecast(url) {\n      fetch(url)\n        .then(function(response) {\n          return response.json();\n        })\n        .then(function(result) {\n          forecastResult(result);\n        })\n        .catch(error => {\n          console.log(\"klaida\", error);\n        });\n    }\n\n    function forecastResult(result) {\n      console.log(result);\n      const { list } = result;\n      list.splice(0, 1);\n\n      const dayOfWeek = (dayNumber, timeStampId) => {\n        dayNumber != undefined\n          ? (timeStampId = listChunks[dayNumber][0].dt)\n          : timeStampId;\n        const a = new Date(timeStampId * 1000);\n        const days = [\n          \"Sunday\",\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\"\n        ];\n        const dayOfWeek = days[a.getDay()];\n        return dayOfWeek;\n      };\n\n      const listChunks = list.reduce(function(result, value, index) {\n        if (\n          !index ||\n          dayOfWeek(undefined, result[result.length - 1][0].dt) !==\n            dayOfWeek(undefined, value.dt)\n        ) {\n          return result.concat([[value]]);\n        }\n        result[result.length - 1].push(value);\n        return result;\n      }, []);\n      console.log(listChunks);\n\n      const forecastTemp = dayNumber => {\n        const temp = Math.round(\n          listChunks[dayNumber].reduce((result, value) => {\n            return result + value.main.temp;\n          }, 0) / listChunks[dayNumber].length\n        );\n        return temp;\n      };\n\n      const dayIcon = dayNumber => {\n        let iconCode;\n        listChunks[dayNumber].forEach(threeHours => {\n          const a = new Date(threeHours.dt_txt);\n          const hour = a.getHours();\n          if (hour === 12) {\n            iconCode = threeHours.weather[0].icon;\n          }\n        });\n        if (!iconCode) {\n          iconCode =\n            listChunks[dayNumber][listChunks[dayNumber].length - 1].weather[0]\n              .icon;\n        }\n        return `http://openweathermap.org/img/wn/${iconCode}@2x.png`;\n      };\n\n      const dayDescr = dayNumber => {\n        let desc;\n        listChunks[dayNumber].forEach(threeHours => {\n          const a = new Date(threeHours.dt_txt);\n          const hour = a.getHours();\n          if (hour === 12) {\n            desc = threeHours.weather[0].description;\n          }\n        });\n        if (!desc) {\n          desc =\n            listChunks[dayNumber][listChunks[dayNumber].length - 1].weather[0]\n              .description;\n        }\n\n        return desc;\n      };\n\n      const templateForecast = `\n        <div id=\"myModal\" class=\"modal\">\n            <div class=\"modal-content\">\n                <span class=\"close\">&times;</span>\n                <h2>Weather forecast</h2>\n                <div class='daysList'>\n                    <div>\n                        <p>${dayOfWeek(0)}</p>\n                        <img src=${dayIcon(0)}>\n                        <p>${forecastTemp(0)}&#8451;</p>\n                        <p>${dayDescr(0)}</p>\n                    </div>\n                    <div>\n                        <p>${dayOfWeek(1)}</p>\n                        <img src=${dayIcon(1)}>\n                        <p>${forecastTemp(1)}&#8451;</p>\n                        <p>${dayDescr(1)}</p>\n                    </div>\n                    <div>\n                        <p>${dayOfWeek(2)}</p>\n                        <img src=${dayIcon(2)}>\n                        <p>${forecastTemp(2)}&#8451;</p>\n                        <p>${dayDescr(2)}</p>\n                    </div>\n                    <div>\n                        <p>${dayOfWeek(3)}</p>\n                        <img src=${dayIcon(3)}>\n                        <p>${forecastTemp(3)}&#8451;</p>\n                        <p>${dayDescr(3)}</p>\n                    </div>\n                    <div>\n                        <p>${dayOfWeek(4)}</p>\n                        <img src=${dayIcon(4)}>\n                        <p>${forecastTemp(4)}&#8451;</p>\n                        <p>${dayDescr(4)}</p>\n                    </div>\n                </div>    \n            </div>\n        </div>\n        `;\n\n      output.insertAdjacentHTML(\"afterend\", templateForecast);\n      const modal = document.getElementById(\"myModal\");\n      const span = document.getElementsByClassName(\"close\")[0];\n      modal.style.display = \"block\";\n\n      span.onclick = function() {\n        modal.style.display = \"none\";\n      };\n      window.onclick = function(event) {\n        if (event.target == modal) {\n          modal.style.display = \"none\";\n        }\n      };\n    }\n  });\n  saveToLocalStorage(userID, cards);\n};\n\nexport { renderCards };\n","const nav = document.querySelector(\"nav\");\nconst portfolio = document.querySelector(\".portfolio\");\nwindow.addEventListener(\"scroll\", () => {\n  if (window.scrollY > 0) {\n    nav.style.height = \"50px\";\n  } else {\n    nav.style.height = \"60px\";\n  }\n});\n","import { getWeather } from \"./http/http\";\nimport {\n  endpoint,\n  endpointCoordOpenWeather\n} from \"./http/endpoints\";\nimport { ELEMENTS } from \"./view/elements\";\nimport { renderCards } from \"./view/views\";\nimport \"./view/effects.js\";\nimport { saveToLocalStorage, getCardsFromLocalStorage } from \"./localStorage\";\nimport rain from \"./img/rain.jpg\";\nimport clear from \"./img/clear-sky.png\";\nimport clouds from \"./img/clouds.jpg\";\n\nlet cards = [];\nmyRefreshFunction()\n  \ngetLocation();\n\nconst objBtn = {\n  deleted: false\n};\n\nconst setDeletedTrue = () => {\n  objBtn.deleted = true;\n};\nconst setDeletedFalse = () => {\n  objBtn.deleted = false;\n};\n\nexport { setDeletedTrue };\n\nlet userID = \"default\";\nconst { form, submit, loader, refresh } = ELEMENTS;\n\nconst changeUser = document.querySelector(\".signOut\");\nchangeUser.addEventListener(\"click\", signOut);\n\nfunction signOut() {\n  let proceed = false;\n  while (!proceed) {\n    let promptResult = prompt(\"Enter your username\");\n    if (promptResult === \"\") {\n      proceed = false;\n      alert(\"Username can not be blank\");\n    } else if (promptResult === null) {\n      cards = getCardsFromLocalStorage(userID) || [];\n\n      if (cards.length !== 0) {\n        renderCards(userID, cards);\n      }\n      proceed = true;\n    } else {\n      userID = promptResult;\n      proceed = true;\n    }\n  }\n\n  cards = getCardsFromLocalStorage(userID) || [];\n  renderCards(userID, cards);\n\n  if (cards === []) {\n    saveToLocalStorage(userID, cards);\n  }\n\n  if (cards.length !== 0) {\n    myRefresh();\n  }\n\n  if (userID !== \"default\") {\n    changeUser.textContent = `${userID}`;\n\n    changeUser.onmouseenter = function() {\n      changeUser.textContent = \"Change user\";\n    };\n\n    changeUser.onmouseleave = function() {\n      changeUser.textContent = `${userID}`;\n    };\n  }\n\n  signOut.called = true;\n}\n\nconst showMoreBtn = () => {\n  const show = document.querySelector(\".show-more\");\n  show.style.display = \"block\";\n  show.addEventListener(\"click\", () => {\n    const containerHeight = document.querySelector(\".cards-container\")\n      .offsetHeight;\n    const cardsHeight = document.querySelector(\".cards\").offsetHeight;\n    if (cardsHeight > containerHeight) {\n      document.querySelector(\n        \".cards-container\"\n      ).style.height = `${cardsHeight}px`;\n      show.style.display = \"none\";\n    }\n  });\n};\n\nform.addEventListener(\"submit\", function(e) {\n  submitMe(e);\n});\n\nfunction submitMe(e) {\n  e.preventDefault();\n  myRefresh();\n  const city = e.path[0].elements.cityName.value;\n\n  const check = cards.find(card => {\n    return card.name.toLowerCase() === city.trim().toLowerCase();\n  });\n  if (!city.trim()) {\n    alert(\"please insert correct city name\");\n    return null;\n  } else if (!!check) {\n    alert(\"this city already exists, enter something new :)\");\n    return null;\n  }\n  const urlWeather = endpoint.getByCityName(city);\n\n  fetchCity(urlWeather);\n\n  document.getElementById(\"myForm\").reset();\n  submitMe.called = true;\n  window.submitBtn = true;\n}\n\nrefresh.addEventListener(\"click\", myRefreshFunction);\n\nfunction myRefreshFunction() {\n  \n  myRefresh();\n  myRefreshFunction.called = true;\n}\n\nconst secondsBetweenActions = 20;\n\nlet secondsRemaining = secondsBetweenActions;\n\nsetInterval(function() {\n  updateStatus(secondsRemaining);\n  secondsRemaining--;\n  if (\n    myRefreshFunction.called === true ||\n    submitMe.called === true ||\n    signOut.called === true ||\n    objBtn.deleted\n  ) {\n    secondsRemaining = secondsBetweenActions;\n    myRefreshFunction.called = false;\n    submitMe.called = false;\n    signOut.called = false;\n    setDeletedFalse();\n  }\n  if (secondsRemaining <= 0) {\n    myRefresh();\n    secondsRemaining = secondsBetweenActions;\n  }\n}, 1000);\n\nlet enabled = true;\nfunction updateStatus(timer) {\n  if (enabled == true) {\n    refresh.textContent = `Update in: ${timer}`;\n  }\n}\n\nrefresh.onmouseenter = function() {\n  enabled = false;\n  refresh.textContent = \"Update now\";\n};\n\nrefresh.onmouseleave = function() {\n  enabled = true;\n};\n\nfunction myRefresh() {\n  cards = getCardsFromLocalStorage(userID);\n  \n  cards.forEach(card => {\n    let city = card.name;\n    const urlWeather = endpoint.getByCityName(city);\n    fetchCity(urlWeather);\n  });\n  cards.length = 0;\n  renderCards(userID, cards);\n  getLocation();\n}\n\nconst fetchCity = url => {\n  submit.style.display = \"none\";\n  loader.style.display = \"flex\";\n  getWeather(url)\n    .then(r => {\n      loader.style.display = \"none\";\n      submit.style.display = \"inline-block\";\n      if (r.cod === \"404\") {\n        throw new Error(r.message);\n      }\n      const date = new Date();\n      const card = {\n        ...r,\n        id: date.getTime(),\n        retrieved: `Updated on ${date.toLocaleString()}`\n      };\n      cards.push(card);\n      renderCards(userID, cards);\n      const containerHeight = document.querySelector(\".cards-container\")\n        .offsetHeight;\n      const cardsHeight = document.querySelector(\".cards\").offsetHeight;\n      if (cardsHeight > containerHeight) {\n        showMoreBtn();\n      }\n    })\n    .catch(e => {\n      console.log(e);\n      alert(\"Your city was not found, please check the spelling\");\n    });\n};\n\nif (cards.length !== 0) {\n  renderCards(userID, cards);\n}\n\nlet latitude;\nlet longitude;\n\nfunction getLocation() {\n  navigator.geolocation.getCurrentPosition(SendLocation);\n}\n\nfunction SendLocation(data) {\n  latitude = data.coords.latitude;\n  longitude = data.coords.longitude;\n\n  const urlCoord = endpointCoordOpenWeather.getByCoord(latitude, longitude);\n  fetchCoord(urlCoord);\n}\n\nfunction fetchCoord(url) {\n  fetch(url)\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(result) {\n      coordResult(result);\n    })\n    .catch(error => {\n      console.log(\"klaida\", error);\n    });\n}\n\nconst body = document.querySelector(\"body\");\n\nconst icon = document.createElement(\"img\");\nicon.className = \"currLocIcon\";\ndocument.querySelector(\".currentInfo\").appendChild(icon);\n\nfunction coordResult(result) {\n  const { main, weather, name, id } = result;\n  let locCond = weather[0].main;\n  let locTemp = main.temp;\n  let locDesc = weather[0].description;\n  let locCity = name;\n  const iconCode = weather[0].icon;\n  switch (locCond) {\n    case \"Rain\":\n      body.style.background = `url(${rain})`;\n\n      body.style.backgroundSize = \"cover\";\n\n      break;\n    case \"Clear\":\n      body.style.background = `url(${clear})`;\n\n      body.style.backgroundSize = \"cover\";\n      break;\n    case \"Clouds\":\n      body.style.background = `url(${clouds})`;\n\n      body.style.backgroundSize = \"cover\";\n      break;\n  }\n\n  let currentTemp = document.querySelector(\".currentTemp\");\n  currentTemp.textContent = `${Math.round(locTemp)} ℃`;\n  let currentDesc = document.querySelector(\".currentDesc\");\n  currentDesc.textContent = `${locDesc}`;\n\n  icon.src = `http://openweathermap.org/img/wn/${iconCode}@2x.png`;\n  let currentCity = document.querySelector(\".currentCity\");\n  if (id === 6955406) {\n    locCity = \"Vilnius\";\n  }\n  currentCity.textContent = `${locCity}:`;\n}\n"]}